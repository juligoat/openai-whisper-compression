[project]
name = "openai-whisper-compression"
version = "0.0.1"
description = "Master Thesis on compression research"
authors = [{ name = "Julian Irigoyen", email = "juir23ab@student.cbs.dk" }]
readme = "README.md"
requires-python = ">=3.10,<4.0"
dependencies = [
    "aiohappyeyeballs==2.4.4",
    "aiohttp==3.11.9",
    "aiosignal==1.3.1",
    "appnope==0.1.4",
    "asttokens==3.0.0",
    "attrs==24.2.0",
    "audioread==3.0.1",
    "certifi==2024.8.30",
    "cffi==1.17.1",
    "charset-normalizer==3.4.0",
    "click==8.1.7",
    "coloredlogs==15.0.1",
    "comm==0.2.2",
    "contourpy==1.3.1",
    "cycler==0.12.1",
    "datasets==3.1.0",
    "debugpy==1.8.9",
    "decorator==5.1.1",
    "dill==0.3.8",
    "evaluate==0.4.3",
    "executing==2.1.0",
    "filelock==3.16.1",
    "flatbuffers==24.12.23",
    "fonttools==4.55.1",
    "frozenlist==1.5.0",
    "fsspec==2024.9.0",
    "huggingface-hub==0.26.3",
    "humanfriendly==10.0",
    "idna==3.10",
    "ipykernel==6.29.5",
    "ipython==8.30.0",
    "ipywidgets==8.1.5",
    "jedi==0.19.2",
    "jinja2==3.1.4",
    "jiwer==3.0.5",
    "joblib==1.4.2",
    "jupyter-client==8.6.3",
    "jupyter-core==5.7.2",
    "jupyterlab-widgets==3.0.13",
    "kiwisolver==1.4.7",
    "lazy-loader==0.4",
    "librosa==0.10.2.post1",
    "llvmlite==0.43.0",
    "markupsafe==3.0.2",
    "matplotlib-inline==0.1.7",
    "matplotlib==3.9.3",
    "mpmath==1.3.0",
    "msgpack==1.1.0",
    "multidict==6.1.0",
    "multiprocess==0.70.16",
    "nest-asyncio==1.6.0",
    "networkx==3.4.2",
    "ninja==1.11.1.3",
    "numba==0.60.0",
    "numpy==2.0.0",
    "onnx==1.17.0",
    "onnxruntime==1.20.1",
    "optimum-quanto==0.2.6",
    "optimum==1.23.3",
    "packaging==24.2",
    "pandas==2.2.3",
    "parso==0.8.4",
    "pexpect==4.9.0",
    "pillow==11.0.0",
    "platformdirs==4.3.6",
    "pooch==1.8.2",
    "prompt-toolkit==3.0.48",
    "propcache==0.2.1",
    "protobuf==5.29.2",
    "psutil==6.1.0",
    "ptyprocess==0.7.0",
    "pure-eval==0.2.3",
    "pyarrow==18.1.0",
    "pycparser==2.22",
    "pygments==2.18.0",
    "pyparsing==3.2.0",
    "python-dateutil==2.9.0.post0",
    "pytz==2024.2",
    "pyyaml==6.0.2",
    "pyzmq==26.2.0",
    "rapidfuzz==3.10.1",
    "regex==2024.11.6",
    "requests==2.32.3",
    "safetensors==0.4.5",
    "scikit-learn==1.5.2",
    "scipy==1.14.1",
    "seaborn==0.13.2",
    "six==1.17.0",
    "soundfile==0.12.1",
    "soxr==0.5.0.post1",
    "stack-data==0.6.3",
    "sympy==1.13.1",
    "threadpoolctl==3.5.0",
    "tokenizers==0.20.3",
    "torch==2.5.1",
    "torchaudio==2.5.1",
    "torchvision==0.20.1",
    "tornado==6.4.2",
    "tqdm==4.67.1",
    "traitlets==5.14.3",
    "transformers==4.46.3",
    "typing-extensions==4.12.2",
    "tzdata==2024.2",
    "urllib3==2.2.3",
    "wcwidth==0.2.13",
    "widgetsnbextension==4.0.13",
    "xxhash==3.5.0",
    "yarl==1.18.3",
    "setuptools>=75.8.0",
    "accelerate>=1.3.0",
    "ctranslate2>=4.5.0",
    "openai-whisper>=20240930",
    "hqq>=0.2.5",
]

[tool.uv]
dev-dependencies = [
    "deptry",
    "ipykernel",
    "ipywidgets",
    "pre-commit",
    "pytest",
    "pytest-cookies",
    "pytest-cov",
    "ruff",
    "tox",
    "vulture",
    "pytest-cov",
    "mypy",
    ]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
files = ["openai_whisper_compression", "tests"]
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
ignore_missing_imports = true


[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = """
    --cov=openai_whisper_compression
    --cov-config=pyproject.toml
    --cov-report=term
    --cov-report=lcov:lcov.info
"""

[tool.ruff]
target-version = "py38"
exclude = ["vulture_whitelist.py"]
line-length = 100
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E",
    "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["openai_whisper_compression"]

[tool.vulture]
paths = ["openai_whisper_compression", "vulture_whitelist.py"]
sort_by_size = true
